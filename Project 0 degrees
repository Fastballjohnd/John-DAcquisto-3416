deque

def shortest_path(source, target):
    """Return the shortest path from source to target using BFS."""
    # Initialize queue with starting node (source)
    queue = deque([[(None, source)]])  # Path format: [(movie_id, person_id)]
    explored = set()

    while queue:
        path = queue.popleft()  # Get the first path in queue
        last_movie, last_person = path[-1]

        # If we reached the target, return the path excluding the initial placeholder (None, source)
        if last_person == target:
            return path[1:]

        # Mark this person as explored
        explored.add(last_person)

        # Expand neighbors
        for movie_id, neighbor_id in neighbors_for_person(last_person):
            if neighbor_id not in explored:
                new_path = path + [(movie_id, neighbor_id)]
                queue.append(new_path)

    # If no path is found, return None
    return None
    

